import java.util.LinkedList;
import java.util.Queue;

class trk {

	int len;
	int wei;

	trk(int len, int wei) {

		this.len = len;
		this.wei = wei;
	}

}


class Solution {
    
    static Queue<trk> q;
	static Queue<trk> q2;
    
    public int solution(int bridge_length, int weight, int[] truck_weight) {
        
        int ans = 0;
        
        q = new LinkedList<>();
		q2 = new LinkedList<>();


		for (int i = 0; i < truck_weight.length; i++) {

			q.offer(new trk(0, truck_weight[i]));
		}
		
		int tmpWei = weight;
		q2.offer(new trk(0, truck_weight[0]));
		q.poll();
		tmpWei -= q2.element().wei;
		
		

		while (!q2.isEmpty()) {

			ans++;

			for(trk t : q2) {
				t.len++;
			}
			
			if(q2.peek().len > bridge_length) {
				tmpWei += q2.poll().wei;
			}
			
			if(!q.isEmpty() && tmpWei - q.peek().wei >=0 ) {
				
				tmpWei -= q.peek().wei;
				q.peek().len++;
				q2.offer(q.poll());
				
			}
			

		}
		
		return ans;
    }
}